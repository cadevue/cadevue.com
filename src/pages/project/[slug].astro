---
import { getCollection, type CollectionEntry } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import ContentLayout from '../../layouts/ContentLayout.astro';

// Static Generation
export const getStaticPaths = async () => {
    const projects : CollectionEntry<"projects">[] = await getCollection('projects');
    const paths = projects.map((project) => ({
        params: { slug: project.slug },
        props: { project }
    }));
    return paths;
};

const { project } = Astro.props;
const { Content } = await project.render();

// Dynamic Image Import
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import Tag from '../../components/Tag.astro';

const { src, alt } = project.data.poster;
const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/**/*.{png,jpg,jpeg}');

const getPoster = images[src];
if (!getPoster) {
    throw new Error(`Image not found: ${src}`);
}

const poster = getPoster();
---

<BaseLayout title=`${project.data.title} - Moonwr Portfolio`>
    <ContentLayout>
        <div class="w-full flex justify-center">
            <main class="text-main-light max-w-4xl">
                <div class="flex flex-col gap-4 mb-8">
                    <h1>{project.data.title}</h1>
                    <Image src={poster} alt={alt} class="w-full h-auto aspect-video rounded-xl" />
                    <div class="flex gap-2">
                        <Tag name="Game Dev" />
                        <Tag name="Unity" />
                        <Tag name="C#" />
                    </div>
                </div>
                <Content />
            </main>

        </div>
    </ContentLayout>
</BaseLayout>