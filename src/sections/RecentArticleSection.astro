---
import { getCollection } from "astro:content";
import ContentLayout from "../layouts/ContentLayout.astro";
import ArrowIcon from "../components/ArrowIcon.astro";
import ArticlePreview from "../components/ArticlePreview.astro";

const allArticles = await getCollection("articles");
const recentArticles = allArticles.sort((a, b) => 
    a.data.date_last_updated < b.data.date_last_updated ? 1 : -1)
    .filter((article) => article.data.is_published)
    .slice(0, 3);
---

<section class="w-full bg-main-black py-20 sm:py-32 relative text-main-light">
    <ContentLayout>
        <div class="bg-main-darker text-gray-300 font-mono px-2 py-1 rounded-xl items-center w-fit" data-aos="fade-up" data-aos-delay="200" id="article-start">
            <span class="text-white">I write articles too! Do check it out ðŸ˜„</span>
        </div>
        <div class="flex items-center gap-2 mt-10" data-aos="fade-up" data-aos-delay="400" data-aos-anchor="#article-start">
            <h1 class="mt-1">Recent Articles</h1>
            <span class="rotate-45">
                <ArrowIcon color="#ba3a2c" size="40px"/>
            </span>
        </div>
        <div class="mt-8">
            <div class="grid grid-cols-1 gap-10 mt-10">
                {recentArticles.map((article, idx) => (
                    <ArticlePreview 
                        slug={article.slug} title={article.data.title} 
                        last_updated={article.data.date_last_updated} description={article.data.meta_description} 
                        aos={{ type: 'fade-up', delay: `${(600 + idx * 150)}`, anchor: '#article-start' }}
                    />
                ))}
            </div>
        </div>
        <p class="mt-10" data-aos="fade-up" data-aos-delay="1200" data-aos-anchor="#article-start">
            <a href="/articles" class="text-main-light" data-astro-prefetch>View all articles</a>
        </p>
    </ContentLayout>
</section>